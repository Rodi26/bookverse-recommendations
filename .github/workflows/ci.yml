name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: latest

      - name: Configure JFrog CLI
        run: |
          jf c add --interactive=false --url "${{ vars.JFROG_URL }}" --access-token ""

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          PYTHONPATH=. pytest -q

      - name: Login to registry (optional)
        if: ${{ vars.DOCKER_REGISTRY != '' }}
        continue-on-error: true
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build API image
        run: |
          docker build -t recommendations-api:ci -f Dockerfile .

      - name: Build Worker image
        run: |
          docker build -t recommendations-worker:ci -f Dockerfile.worker .

      - name: Archive config and resources
        uses: actions/upload-artifact@v4
        with:
          name: recommendations-extra
          path: |
            config/**
            resources/**

      - name: Tag and push images (optional)
        if: ${{ vars.DOCKER_REGISTRY != '' }}
        continue-on-error: true
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
          API_IMAGE=${{ vars.DOCKER_REGISTRY }}/recommendations-api:${SHORT_SHA}
          WORKER_IMAGE=${{ vars.DOCKER_REGISTRY }}/recommendations-worker:${SHORT_SHA}
          docker tag recommendations-api:ci $API_IMAGE
          docker tag recommendations-worker:ci $WORKER_IMAGE
          docker push $API_IMAGE || true
          docker push $WORKER_IMAGE || true

      - name: Scan images with Trivy (optional)
        if: ${{ vars.ENABLE_TRIVY == 'true' }}
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: recommendations-api:ci
          format: table
          exit-code: '0'

      - name: Install Cosign (optional)
        if: ${{ vars.ENABLE_COSIGN == 'true' }}
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign images with Cosign OIDC (optional)
        if: ${{ vars.ENABLE_COSIGN == 'true' && vars.DOCKER_REGISTRY != '' }}
        env:
          COSIGN_EXPERIMENTAL: 'true'
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
          API_IMAGE=${{ vars.DOCKER_REGISTRY }}/recommendations-api:${SHORT_SHA}
          WORKER_IMAGE=${{ vars.DOCKER_REGISTRY }}/recommendations-worker:${SHORT_SHA}
          cosign sign --yes $API_IMAGE || true
          cosign sign --yes $WORKER_IMAGE || true

      - name: Docker images metadata
        run: |
          docker images | grep recommendations-
